{"MemberDocuments":[{"MemberName":"LUnit","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/LUnit.md"},{"MemberName":"LCore.LUnit.AssemblyTester","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester.md"},{"MemberName":"LCore.LUnit.MultiTestReporter","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter.md"},{"MemberName":"LCore.LUnit.XUnitOutputTester","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/XUnitOutputTester.md"},{"MemberName":"LCore.LUnit.AssemblyCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyCoverage.md"},{"MemberName":"LCore.LUnit.ITestAttribute","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/ITestAttribute.md"},{"MemberName":"LCore.LUnit.TestAttribute","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestAttribute.md"},{"MemberName":"LCore.LUnit.CodeCoverageMetaData","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/CodeCoverageMetaData.md"},{"MemberName":"LCore.LUnit.LUnit","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit.md"},{"MemberName":"LCore.LUnit.Traits","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Traits.md"},{"MemberName":"LCore.LUnit.TestExt","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt.md"},{"MemberName":"LCore.LUnit.TypeCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage.md"},{"MemberName":"LCore.LUnit.MethodCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage.md"},{"MemberName":"LCore.LUnit.Assert.AssertionExt","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt.md"},{"MemberName":"LCore.LUnit.Fluent.FluentExt","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt.md"},{"MemberName":"LCore.LUnit.LUnit.Categories","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories.md"},{"MemberName":"LCore.LUnit.LUnit.Format","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Format.md"},{"MemberName":"LCore.LUnit.LUnit.Urls","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Urls.md"},{"MemberName":"AssemblyTester.AssemblyStatus()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_AssemblyStatus.md"},{"MemberName":"AssemblyTester.GenerateAssemblyTestStubs()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_GenerateAssemblyTestStubs.md"},{"MemberName":"AssemblyTester.TestFailure01()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure01.md"},{"MemberName":"AssemblyTester.TestFailure02()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure02.md"},{"MemberName":"AssemblyTester.TestFailure03()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure03.md"},{"MemberName":"AssemblyTester.TestFailure04()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure04.md"},{"MemberName":"AssemblyTester.TestFailure05()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure05.md"},{"MemberName":"AssemblyTester.TestFailure06()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure06.md"},{"MemberName":"AssemblyTester.TestFailure07()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure07.md"},{"MemberName":"AssemblyTester.TestFailure08()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure08.md"},{"MemberName":"AssemblyTester.TestFailure09()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure09.md"},{"MemberName":"AssemblyTester.TestFailure10()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyTester_TestFailure10.md"},{"MemberName":"MultiTestReporter.TestFailure01()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure01.md"},{"MemberName":"MultiTestReporter.TestFailure02()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure02.md"},{"MemberName":"MultiTestReporter.TestFailure03()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure03.md"},{"MemberName":"MultiTestReporter.TestFailure04()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure04.md"},{"MemberName":"MultiTestReporter.TestFailure05()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure05.md"},{"MemberName":"MultiTestReporter.TestFailure06()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure06.md"},{"MemberName":"MultiTestReporter.TestFailure07()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure07.md"},{"MemberName":"MultiTestReporter.TestFailure08()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure08.md"},{"MemberName":"MultiTestReporter.TestFailure09()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure09.md"},{"MemberName":"MultiTestReporter.TestFailure10()","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MultiTestReporter_TestFailure10.md"},{"MemberName":"LCore.LUnit.AssemblyCoverage.CoveringAssembly","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyCoverage_CoveringAssembly.md"},{"MemberName":"LCore.LUnit.AssemblyCoverage.TotalCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyCoverage_TotalCoverage.md"},{"MemberName":"LCore.LUnit.AssemblyCoverage.AssertionsMade","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyCoverage_AssertionsMade.md"},{"MemberName":"LCore.LUnit.AssemblyCoverage.TypeCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssemblyCoverage_TypeCoverage.md"},{"MemberName":"ITestAttribute.RunTest(MethodInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/ITestAttribute_RunTest.md"},{"MemberName":"LCore.LUnit.ITestAttribute.GenericTypes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/ITestAttribute_GenericTypes.md"},{"MemberName":"TestAttribute.RunTest(MethodInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestAttribute_RunTest.md"},{"MemberName":"LCore.LUnit.TestAttribute.GenericTypes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestAttribute_GenericTypes.md"},{"MemberName":"LCore.LUnit.CodeCoverageMetaData.Coverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/CodeCoverageMetaData_Coverage.md"},{"MemberName":"LUnit.FixParameterTypes(MethodInfo, Object[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_FixParameterTypes.md"},{"MemberName":"LUnit.FixObject(MethodInfo, Type, Object&)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_FixObject.md"},{"MemberName":"LUnit.GetMethodDelegate(MethodInfo, Type, String) => Object","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_GetMethodDelegate.md"},{"MemberName":"LUnit.GetCheckMethod(MethodInfo, String) => Func<Boolean>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_GetCheckMethod.md"},{"MemberName":"LUnit.GetCheckMethodArg(MethodInfo, String) => Func<Object, Boolean>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_GetCheckMethodArg.md"},{"MemberName":"LCore.LUnit.LUnit.GeneratedCodeWarning","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_GeneratedCodeWarning.md"},{"MemberName":"LCore.LUnit.LUnit.Categories","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_Categories.md"},{"MemberName":"LCore.LUnit.LUnit.Format","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_Format.md"},{"MemberName":"LCore.LUnit.LUnit.Urls","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/LUnit_Urls.md"},{"MemberName":"LCore.LUnit.Traits.TargetMember","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Traits_TargetMember.md"},{"MemberName":"TestExt.GetTestMembers(Type) => Dictionary<MemberInfo, List<ILUnitAttribute>>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_GetTestMembers.md"},{"MemberName":"TestExt.RunTest(ITestResultAttribute, MethodInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_RunTest-0.md"},{"MemberName":"TestExt.RunTest(ITestFailsAttribute, MethodInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_RunTest-1.md"},{"MemberName":"TestExt.RunTest(ITestSucceedsAttribute, MethodInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_RunTest-2.md"},{"MemberName":"TestExt.RunTest(ITestSourceAttribute, MethodInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_RunTest-3.md"},{"MemberName":"TestExt.RunTest(IValidateAttribute, MemberInfo)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_RunTest-4.md"},{"MemberName":"TestExt.GetTargetingName(MemberInfo, String, String, String) => Tuple<String, String, String>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_GetTargetingName.md"},{"MemberName":"TestExt.GetAssemblyMemberTraits(IEnumerable<Assembly>) => Dictionary<MethodInfo, List<String>>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_GetAssemblyMemberTraits.md"},{"MemberName":"TestExt.GatherCodeCoverageMetaData(MemberInfo, String[]) => CodeCoverageMetaData","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TestExt_GatherCodeCoverageMetaData.md"},{"MemberName":"TypeCoverage.GenerateTestStubs(String)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_GenerateTestStubs.md"},{"MemberName":"TypeCoverage.GetTestStub(Boolean) => String[]","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_GetTestStub.md"},{"MemberName":"LCore.LUnit.TypeCoverage.CoveringType","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_CoveringType.md"},{"MemberName":"LCore.LUnit.TypeCoverage.CoveragePercent","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_CoveragePercent.md"},{"MemberName":"LCore.LUnit.TypeCoverage.AssertionsMade","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_AssertionsMade.md"},{"MemberName":"LCore.LUnit.TypeCoverage.MemberCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_MemberCoverage.md"},{"MemberName":"LCore.LUnit.TypeCoverage.TestMember_Namespace","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_TestMember_Namespace.md"},{"MemberName":"LCore.LUnit.TypeCoverage.TestMember_Class","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/TypeCoverage_TestMember_Class.md"},{"MemberName":"MethodCoverage.GetTestStub(List&<String>) => String[]","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_GetTestStub.md"},{"MemberName":"LCore.LUnit.MethodCoverage.CoveringMember","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_CoveringMember.md"},{"MemberName":"LCore.LUnit.MethodCoverage.CoveringMemberDeclaringType","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_CoveringMemberDeclaringType.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestResultAttributes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestResultAttributes.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestSourceAttributes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestSourceAttributes.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestSucceedsAttributes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestSucceedsAttributes.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestFailsAttributes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestFailsAttributes.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestBoundAttributes","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestBoundAttributes.md"},{"MemberName":"LCore.LUnit.MethodCoverage.AttributeCoverage","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_AttributeCoverage.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestedFlag","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestedFlag.md"},{"MemberName":"LCore.LUnit.MethodCoverage.IsCovered","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_IsCovered.md"},{"MemberName":"LCore.LUnit.MethodCoverage.MemberTraitValue","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_MemberTraitValue.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestMember_Namespace","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestMember_Namespace.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestMember_Class","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestMember_Class.md"},{"MemberName":"LCore.LUnit.MethodCoverage.TestMember_Member","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_TestMember_Member.md"},{"MemberName":"LCore.LUnit.MethodCoverage.MemberTraitFound","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_MemberTraitFound.md"},{"MemberName":"LCore.LUnit.MethodCoverage.AssertionsMade","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_AssertionsMade.md"},{"MemberName":"LCore.LUnit.MethodCoverage.MemberTraitTestedBy","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/MethodCoverage_MemberTraitTestedBy.md"},{"MemberName":"AssertionExt.AssertSucceedes(MethodInfo, Object, Object[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-0.md"},{"MemberName":"AssertionExt.AssertSucceedes(MethodInfo, Object, Object[], Func<Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-1.md"},{"MemberName":"AssertionExt.AssertSucceedes(MethodInfo, Object, Object[], Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-2.md"},{"MemberName":"AssertionExt.AssertSucceedes(MethodInfo, Object, Object[], Func<U, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-3.md"},{"MemberName":"AssertionExt.AssertSucceedes(Action)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-4.md"},{"MemberName":"AssertionExt.AssertSucceedes(Action<T1>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-5.md"},{"MemberName":"AssertionExt.AssertSucceedes(Action<T1, T2>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-6.md"},{"MemberName":"AssertionExt.AssertSucceedes(Action<T1, T2, T3>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-7.md"},{"MemberName":"AssertionExt.AssertSucceedes(Action<T1, T2, T3, T4>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-8.md"},{"MemberName":"AssertionExt.AssertSucceedes(Func<U>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-9.md"},{"MemberName":"AssertionExt.AssertSucceedes(Func<T1, U>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-10.md"},{"MemberName":"AssertionExt.AssertSucceedes(Func<T1, T2, U>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-11.md"},{"MemberName":"AssertionExt.AssertSucceedes(Func<T1, T2, T3, U>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-12.md"},{"MemberName":"AssertionExt.AssertSucceedes(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSucceedes-13.md"},{"MemberName":"AssertionExt.AssertFails(MethodInfo, Object[], Object, Func<Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-0.md"},{"MemberName":"AssertionExt.AssertFails(MethodInfo, Object[], Object, Type, Func<Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-1.md"},{"MemberName":"AssertionExt.AssertFails(Action)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-2.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-3.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1, T2>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-4.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1, T2, T3>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-5.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1, T2, T3, T4>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-6.md"},{"MemberName":"AssertionExt.AssertFails(Action)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-7.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-8.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1, T2>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-9.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1, T2, T3>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-10.md"},{"MemberName":"AssertionExt.AssertFails(Action<T1, T2, T3, T4>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-11.md"},{"MemberName":"AssertionExt.AssertFails(Func<U>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-12.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, U>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-13.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, T2, U>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-14.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, T2, T3, U>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-15.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-16.md"},{"MemberName":"AssertionExt.AssertFails(Func<U>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-17.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, U>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-18.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, T2, U>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-19.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, T2, T3, U>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-20.md"},{"MemberName":"AssertionExt.AssertFails(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertFails-21.md"},{"MemberName":"AssertionExt.AssertResult(MethodInfo, Object, Object[], Object, Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-0.md"},{"MemberName":"AssertionExt.AssertResult(MethodInfo, Object, Object[], U, Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-1.md"},{"MemberName":"AssertionExt.AssertResult(Func<U>, U)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-2.md"},{"MemberName":"AssertionExt.AssertResult(Func<T1, U>, T1, U)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-3.md"},{"MemberName":"AssertionExt.AssertResult(Func<T1, T2, U>, T1, T2, U)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-4.md"},{"MemberName":"AssertionExt.AssertResult(Func<T1, T2, T3, U>, T1, T2, T3, U)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-5.md"},{"MemberName":"AssertionExt.AssertResult(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4, U)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertResult-6.md"},{"MemberName":"AssertionExt.AssertSource(MethodInfo, Object, Object[], Object, Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSource-0.md"},{"MemberName":"AssertionExt.AssertSource(MethodInfo, Object, Object[], U, Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/AssertionExt_AssertSource-1.md"},{"MemberName":"FluentExt.ShouldSucceed(MethodInfo, Object, Object[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-0.md"},{"MemberName":"FluentExt.ShouldSucceed(MethodInfo, Object, Object[], Func<Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-1.md"},{"MemberName":"FluentExt.ShouldSucceed(MethodInfo, Object, Object[], Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-2.md"},{"MemberName":"FluentExt.ShouldSucceed(MethodInfo, Object, Object[], Func<U, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-3.md"},{"MemberName":"FluentExt.ShouldSucceed(Action)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-4.md"},{"MemberName":"FluentExt.ShouldSucceed(Action<T1>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-5.md"},{"MemberName":"FluentExt.ShouldSucceed(Action<T1, T2>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-6.md"},{"MemberName":"FluentExt.ShouldSucceed(Action<T1, T2, T3>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-7.md"},{"MemberName":"FluentExt.ShouldSucceed(Action<T1, T2, T3, T4>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-8.md"},{"MemberName":"FluentExt.ShouldSucceed(Func<U>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-9.md"},{"MemberName":"FluentExt.ShouldSucceed(Func<T1, U>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-10.md"},{"MemberName":"FluentExt.ShouldSucceed(Func<T1, T2, U>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-11.md"},{"MemberName":"FluentExt.ShouldSucceed(Func<T1, T2, T3, U>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-12.md"},{"MemberName":"FluentExt.ShouldSucceed(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldSucceed-13.md"},{"MemberName":"FluentExt.ShouldFail(MethodInfo, Object[], Object, Func<Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-0.md"},{"MemberName":"FluentExt.ShouldFail(MethodInfo, Object[], Object, Type, Func<Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-1.md"},{"MemberName":"FluentExt.ShouldFail(Action)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-2.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-3.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1, T2>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-4.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1, T2, T3>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-5.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1, T2, T3, T4>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-6.md"},{"MemberName":"FluentExt.ShouldFail(Action)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-7.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-8.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1, T2>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-9.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1, T2, T3>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-10.md"},{"MemberName":"FluentExt.ShouldFail(Action<T1, T2, T3, T4>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-11.md"},{"MemberName":"FluentExt.ShouldFail(Func<U>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-12.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, U>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-13.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, T2, U>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-14.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, T2, T3, U>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-15.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-16.md"},{"MemberName":"FluentExt.ShouldFail(Func<U>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-17.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, U>, T1)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-18.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, T2, U>, T1, T2)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-19.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, T2, T3, U>, T1, T2, T3)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-20.md"},{"MemberName":"FluentExt.ShouldFail(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldFail-21.md"},{"MemberName":"FluentExt.ShouldBe(MethodInfo, Object, Object[], Object, Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-0.md"},{"MemberName":"FluentExt.ShouldBe(MethodInfo, Object, Object[], U, Func<Object, Boolean>[])","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-1.md"},{"MemberName":"FluentExt.ShouldBe(Func<U>, U, Nullable<TimeSpan>, Nullable<TimeSpan>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-2.md"},{"MemberName":"FluentExt.ShouldBe(Func<T1, U>, T1, U, Nullable<TimeSpan>, Nullable<TimeSpan>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-3.md"},{"MemberName":"FluentExt.ShouldBe(Func<T1, T2, U>, T1, T2, U, Nullable<TimeSpan>, Nullable<TimeSpan>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-4.md"},{"MemberName":"FluentExt.ShouldBe(Func<T1, T2, T3, U>, T1, T2, T3, U, Nullable<TimeSpan>, Nullable<TimeSpan>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-5.md"},{"MemberName":"FluentExt.ShouldBe(Func<T1, T2, T3, T4, U>, T1, T2, T3, T4, U, Nullable<TimeSpan>, Nullable<TimeSpan>)","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-6.md"},{"MemberName":"FluentExt.HaveAttribute(TypeAssertions, String, Object[]) => AndConstraint<TypeAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_HaveAttribute-0.md"},{"MemberName":"FluentExt.HaveAttribute(TypeAssertions, Boolean, String, Object[]) => AndConstraint<TypeAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_HaveAttribute-1.md"},{"MemberName":"FluentExt.NotHaveAttribute(TypeAssertions, String, Object[]) => AndConstraint<TypeAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_NotHaveAttribute-0.md"},{"MemberName":"FluentExt.NotHaveAttribute(TypeAssertions, Boolean, String, Object[]) => AndConstraint<TypeAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_NotHaveAttribute-1.md"},{"MemberName":"FluentExt.ShouldBe(T, T, String, Object[]) => AndConstraint<ObjectAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBe-7.md"},{"MemberName":"FluentExt.ShouldBeTrue(Boolean, String, Object[]) => AndConstraint<BooleanAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBeTrue.md"},{"MemberName":"FluentExt.ShouldBeFalse(Boolean, String, Object[]) => AndConstraint<BooleanAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBeFalse.md"},{"MemberName":"FluentExt.ShouldBeNull(T, String, Object[]) => AndConstraint<ObjectAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBeNull-0.md"},{"MemberName":"FluentExt.ShouldBeNull(Nullable<T>, String, Object[]) => AndConstraint<ObjectAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldBeNull-1.md"},{"MemberName":"FluentExt.ShouldNotBeNull(T, String, Object[]) => AndConstraint<ObjectAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldNotBeNull-0.md"},{"MemberName":"FluentExt.ShouldNotBeNull(Nullable<T>, String, Object[]) => AndConstraint<ObjectAssertions>","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/FluentExt_ShouldNotBeNull-1.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.Category","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_Category.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.StaticMethods","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_StaticMethods.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.AttributeTests","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_AttributeTests.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.Tools","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_Tools.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.UnitTests","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_UnitTests.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.Internal","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_Internal.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.NullabilityTests","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_NullabilityTests.md"},{"MemberName":"LCore.LUnit.LUnit.Categories.AssemblyTests","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Categories_AssemblyTests.md"},{"MemberName":"LCore.LUnit.LUnit.Format.Namespace","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Format_Namespace.md"},{"MemberName":"LCore.LUnit.LUnit.Format.Class","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Format_Class.md"},{"MemberName":"LCore.LUnit.LUnit.Format.Member","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Format_Member.md"},{"MemberName":"LCore.LUnit.LUnit.Urls.GitHubRepository_LUnit","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Urls_GitHubRepository_LUnit.md"},{"MemberName":"LCore.LUnit.LUnit.Urls.GitHubRepository_LCore","FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/LUnit/docs/Urls_GitHubRepository_LCore.md"},{"MemberName":null,"FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/README.md"},{"MemberName":null,"FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/CoverageSummary.md"},{"MemberName":null,"FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/TagSummary_TODO.md"},{"MemberName":null,"FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/TagSummary_BUG.md"},{"MemberName":null,"FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/TagSummary_throw new NotImplementedException.md"},{"MemberName":null,"FullUrl_Documentation":"https://github.com/CodeSingularity/LUnit/blob/master/TableOfContents.md"}]}