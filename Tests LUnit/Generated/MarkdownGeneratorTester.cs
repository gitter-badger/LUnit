// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using LCore.LUnit;
using Xunit;
using System;
using LCore.LUnit.Markdown;
namespace LUnit_Tests.LCore.LUnit.Markdown
{
    /*
    Covering class: LCore.LUnit.Markdown.MarkdownGenerator
    
    LUnit has Autogenerated 5 method stubs:
    */
    public partial class MarkdownGeneratorTester
    {
        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(global::LCore.LUnit.Markdown)+ "." + nameof(MarkdownGenerator)+ "." + nameof(MarkdownGenerator.MarkdownPath_Assembly) + "(Assembly) => String")]
        public void MarkdownPath_Assembly()
        {
            // TODO: Implement method test LCore.LUnit.Markdown.MarkdownGenerator.MarkdownPath_Assembly
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(global::LCore.LUnit.Markdown)+ "." + nameof(MarkdownGenerator)+ "." + nameof(MarkdownGenerator.MarkdownPath_Type) + "(Type) => String")]
        public void MarkdownPath_Type()
        {
            // TODO: Implement method test LCore.LUnit.Markdown.MarkdownGenerator.MarkdownPath_Type
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(global::LCore.LUnit.Markdown)+ "." + nameof(MarkdownGenerator)+ "." + nameof(MarkdownGenerator.MarkdownPath_Member) + "(MemberInfo) => String")]
        public void MarkdownPath_Member()
        {
            // TODO: Implement method test LCore.LUnit.Markdown.MarkdownGenerator.MarkdownPath_Member
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(global::LCore.LUnit.Markdown)+ "." + nameof(MarkdownGenerator)+ "." + nameof(MarkdownGenerator.Generate) + "(Boolean)")]
        public void Generate()
        {
            // TODO: Implement method test LCore.LUnit.Markdown.MarkdownGenerator.Generate
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(global::LCore.LUnit.Markdown)+ "." + nameof(MarkdownGenerator)+ "." + nameof(MarkdownGenerator.GetAllMarkdown) + "() => List<GitHubMarkdown>")]
        public void GetAllMarkdown()
        {
            // TODO: Implement method test LCore.LUnit.Markdown.MarkdownGenerator.GetAllMarkdown
        }

    }
}
