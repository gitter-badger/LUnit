// WARNING: this file was autogenerated by LUnit. Remove this line or move this file to prevent this file's contents from being overwritten.
using Xunit.Abstractions;
using Xunit;
using System;
using LCore.LUnit;
namespace LUnit_Tests.LCore.LUnit
{
    ///<summary>
    /// Covering class: LCore.LUnit.TestExt
    ///
    ///LUnit has Autogenerated 9 method stubs:
    ///</summary>
    public partial class TestExtTester : XUnitOutputTester, IDisposable
    {
        public TestExtTester([NotNull] ITestOutputHelper Output) : base(Output) { }

        public void Dispose() { }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.GetTestMembers) + "(Type) => Dictionary<MemberInfo, List<ILUnitAttribute>>")]
        public void GetTestMembers()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.GetTestMembers
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.RunTest) + "(ITestResultAttribute, MethodInfo)")]
        public void RunTest()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.RunTest
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.RunTest) + "(ITestFailsAttribute, MethodInfo)")]
        public void RunTest()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.RunTest
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.RunTest) + "(ITestSucceedsAttribute, MethodInfo)")]
        public void RunTest()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.RunTest
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.RunTest) + "(ITestSourceAttribute, MethodInfo)")]
        public void RunTest()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.RunTest
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.RunTest) + "(IValidateAttribute, MemberInfo)")]
        public void RunTest()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.RunTest
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.GetTargetingName) + "(MemberInfo, String, String, String) => Tuple<String, String, String>")]
        public void GetTargetingName()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.GetTargetingName
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.GetAssemblyMemberTraits) + "(IEnumerable<Assembly>) => List<String>")]
        public void GetAssemblyMemberTraits()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.GetAssemblyMemberTraits
        }

        [Fact]
        [Trait(Traits.TargetMember,nameof(LCore)+ "." + nameof(global::LCore.LUnit)+ "." + nameof(TestExt)+ "." + nameof(TestExt.GatherCodeCoverageMetaData) + "(MemberInfo, String[]) => CodeCoverageMetaData")]
        public void GatherCodeCoverageMetaData()
        {
            // TODO: Implement method test LCore.LUnit.TestExt.GatherCodeCoverageMetaData
        }

    }
}
